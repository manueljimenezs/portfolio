{"version":3,"sources":["pages/me.svg","components/Layout.js","components/Navigation/Burger.js","components/Navigation/Navbar.js","components/UI/Button/ButtonLink.js","components/UI/Card/Card.js","pages/ProjectData.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","props","className","children","StyledBurger","styled","div","open","Ul","ul","Burger","useState","setOpen","onClick","href","Nav","nav","Navbar","size","Component","ButtonStyle","a","primary","css","danger","success","ButtonLink","label","CardStyle","Card","title","class","projects","data","url","description","Home","id","src","logo","alt","map","key","App","document","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,gC,oMCU5BC,G,kBARA,SAAAC,GACX,OACI,yBAAKC,UAAU,UACdD,EAAME,Y,q5DCFf,IAAMC,EAAeC,IAAOC,IAAV,KAgBM,qBAAGC,KAAkB,OAAS,UAInC,qBAAGA,KAAkB,gBAAkB,eAGvC,qBAAGA,KAAkB,mBAAqB,mBAC5C,qBAAGA,KAAkB,EAAI,KAGvB,qBAAGA,KAAkB,iBAAmB,eAKrDC,EAAKH,IAAOI,GAAV,KA6BS,qBAAGF,KAAkB,gBAAkB,sBA2DzCG,EAtBA,WAAO,IAAD,EACOC,oBAAS,GADhB,mBACVJ,EADU,KACJK,EADI,KAMjB,OACI,oCACI,kBAACR,EAAD,CAAcG,KAAMA,EAAMM,QAAS,kBAAMD,GAASL,KAC9C,8BACA,8BACA,+BAEJ,kBAACC,EAAD,CAAID,KAAMA,GACN,4BAAI,uBAAGM,QAAS,kBAAMD,GAASL,IAAOO,KAAK,eAAvC,SACJ,4BAAI,uBAAGD,QAAS,kBAAMD,GAASL,IAAOO,KAAK,cAAvC,aACJ,4BAAI,uBAAGA,KAAK,qCAAR,Y,45BC/GpB,IAAMC,EAAMV,IAAOW,IAAV,KA0EMC,E,iLArBP,OAEI,kBAACF,EAAD,KACI,yBAAKb,UAAU,QACX,uBAAGY,KAAK,eAAR,cAEJ,yBAAKZ,UAAU,cACf,yBAAKA,UAAU,eACX,uBAAGY,KAAK,qCACJ,kBAAC,IAAD,CAAUI,KAAM,MAEpB,uBAAGJ,KAAK,2EACJ,kBAAC,IAAD,CAAYI,KAAM,OAG1B,kBAAC,EAAD,W,GAlBKC,a,iqCClDd,IAAMC,EAAcf,IAAOgB,EAAV,KAkBpB,SAAApB,GAAK,OAAIA,EAAMqB,SAAWC,YAAjB,QAKT,SAAAtB,GAAK,OAAIA,EAAMuB,QAAUD,YAAhB,QAKT,SAAAtB,GAAK,OAAIA,EAAMwB,SAAWF,YAAjB,QAiBEG,EATI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAMb,EAAmB,EAAnBA,KAAQb,EAAW,gCAC1C,OACI,kBAACmB,EAAD,iBAAiBnB,EAAjB,CACEa,KAAMA,IACLa,I,02BC3CJ,IAAMC,EAAYvB,IAAOC,IAAV,KAkDPuB,EAdF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAMhB,EAAmB,EAAnBA,KAAQb,EAAW,gCACpC,OACI,kBAAC2B,EAAD,KACI,uBAAGd,KAAMA,GACL,yBAAKiB,MAAM,cAAcD,IAE7B,yBAAKC,MAAM,oBACN9B,EAAME,YC1BR6B,EApBE,CACbC,KAAM,CACF,CACIH,MAAO,YACPI,IAAK,8CACLC,YAAa,mHAEjB,CACIL,MAAO,wDACPI,IAAK,8CACLC,YAAa,iHAEjB,CACIL,MAAO,oDACPI,IAAK,sEACLC,YAAa,2JC8BVC,E,iLAlCP,OACA,oCACI,kBAAC,EAAD,MACA,yBAAKlC,UAAU,WACf,6BAASmC,GAAG,cACJ,yBAAKC,IAAKC,IAAMrC,UAAU,cAAcsC,IAAI,KAC5C,yBAAKtC,UAAU,kBACX,yBAAKA,UAAU,YAAf,cACA,yBAAKA,UAAU,SAAf,qBACA,yBAAKA,UAAU,WACX,kBAAC,EAAD,CAAYoB,SAAO,EAACR,KAAK,aAAaa,MAAM,aAC5C,kBAAC,EAAD,CAAYF,SAAO,EAACX,KAAK,aAAaa,MAAM,cAFhD,iCAIJ,0BAAMzB,UAAU,SAAQ,kBAAC,IAAD,QAEhC,6BAASmC,GAAG,aACR,wCACJ,yBAAKnC,UAAU,cACV8B,EAASC,KAAKQ,KAAI,SAACR,GAAD,OACnB,kBAAC,EAAD,CAAMS,IAAKT,EAAKH,MAAOA,MAAOG,EAAKH,MAAOhB,KAAMmB,EAAKC,KAChDD,EAAKE,kBAId,8F,GA1BOhB,aCOJwB,MAXf,WAEE,OADAC,SAASd,MAAQ,oBAEf,yBAAK5B,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,SCEY2C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASP,SAASQ,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ab2e8091.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.78e4a9c2.svg\";","import React from 'react';\r\nimport './Layout.css';\r\nconst Layout = props => {\r\n    return (\r\n        <div className=\"layout\">\r\n        {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Layout;","import React,{ useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledBurger = styled.div`\r\n\r\n  \r\n  width: 25px;\r\n  height: 26px;\r\n  display: block;\r\n  z-index: 20;\r\n  display: none;\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    line-height: 2rem;\r\n    flex-flow: column nowrap;\r\n  }\r\n  div {\r\n    height: 4px;\r\n    background-color: ${({ open }) => open ? '#fff' : '#000'};\r\n    transform-origin: 0.3px;\r\n    transition: all 0.2s linear;\r\n    &:nth-child(1) {\r\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\r\n    }\r\n    &:nth-child(2) {\r\n      transform: ${({ open }) => open ? 'translateX(100%)' : 'translateX(0)'};\r\n      opacity: ${({ open }) => open ? 0 : 1};\r\n    }\r\n    &:nth-child(3) {\r\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n\r\n  list-style: none;\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: flex-end;\r\n  margin: 0;\r\n  padding-inline-start: 0px;\r\n  \r\n  li {\r\n    padding: 0 20px 2px 0;\r\n    a {\r\n      text-decoration: none;\r\n      color: #000;\r\n      text-transform: uppercase;\r\n      font-size: 0.8rem;\r\n      font-weight: bold;\r\n      font-family: 'Inter';\r\n    }\r\n  }\r\n\r\n;\r\n  /*For mobile*/\r\n  @media (max-width: 768px) {\r\n    justify-content: flex-start;\r\n    padding-top: 80px;\r\n    flex-flow: column nowrap;\r\n    background-color: tomato;\r\n    position: fixed;\r\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\r\n    top: 0;\r\n    right: 0;\r\n    height: 100vh;\r\n    width: 100vw;\r\n    \r\n    /*transition: transform 0.2s ease-in-out;*/\r\n    transition: transform .3192s cubic-bezier(0.04, 0.04, 0.12, 0.96) .1008s,\r\n    -webkit-transform .3192s cubic-bezier(0.04, 0.04, 0.12, 0.96) .1008s;\r\n/*\r\n    li:hover {\r\n      background-color: #fff;\r\n      color: #000;\r\n\r\n      a {\r\n        color: tomato;\r\n      }\r\n    }*/\r\n\r\n    li {\r\n      \r\n      padding: 8px 30px;\r\n      text-align: right;\r\n\r\n      a {\r\n        color: tomato;\r\n        font-size: 1.6rem;\r\n        color: white;\r\n        font-weight: 800;\r\n      }\r\n    }\r\n\r\n  \r\n\r\n  }\r\n`;\r\n\r\nconst Burger = () => {\r\n    const [open, setOpen] = useState(false)\r\n\r\n      /* Preventing page scrolling when open*/\r\n      /*open ? document.body.style.overflow = 'hidden' :  document.body.style.overflow = 'unset';*/\r\n\r\n    return (\r\n        <>\r\n            <StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n                <div />\r\n                <div />\r\n                <div />\r\n            </StyledBurger>\r\n            <Ul open={open}>\r\n                <li><a onClick={() => setOpen(!open)} href=\"#home-intro\">Home</a></li>\r\n                <li><a onClick={() => setOpen(!open)} href=\"#home-cont\">Projects</a></li>\r\n                <li><a href=\"https://manueljimenezs.github.io/\">Blog</a></li>                           \r\n            </Ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Burger;","import React, {Component} from 'react';\r\n/*import './Navbar.css'*/\r\nimport styled from 'styled-components';\r\nimport Burger from './Burger';\r\nimport { FaGithub, FaLinkedin } from 'react-icons/fa';\r\n\r\nconst Nav = styled.nav`\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n    :active{\r\n        /*color: tomato;*/\r\n    }\r\n  }\r\n\r\n  /*width: 100%;*/\r\n  height: 3rem;\r\n  display: flex;\r\n  padding: 0 1rem;\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(255,255,255,1);\r\n\r\n  @supports ((-webkit-backdrop-filter: blur(20px)) or (backdrop-filter: blur(20px))) {\r\n     background-color: rgba(255,255,255,0.6);\r\n     -webkit-backdrop-filter: blur(20px);\r\n     backdrop-filter: blur(20px);\r\n  }\r\n  \r\n  .separator {\r\n      margin: 0 auto;\r\n  }\r\n\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .logo {\r\n    /*padding: 25px 30px;*/\r\n    font-weight:800;\r\n    font-size: 1.2em;\r\n    font-family: 'Inter';\r\n  }\r\n\r\n  .socialmedia {\r\n      padding-right: 20px;\r\n\r\n      svg {\r\n          padding-top 4px;\r\n          padding-left: 1em;\r\n      }\r\n  }\r\n`\r\n\r\n\r\nclass Navbar extends Component {\r\n//const Header = () => {\r\n    render() {\r\n        return (\r\n\r\n            <Nav>\r\n                <div className=\"logo\">\r\n                    <a href=\"#home-intro\">manujs.me</a>\r\n                </div>\r\n                <div className=\"separator\"></div>\r\n                <div className=\"socialmedia\">\r\n                    <a href=\"https://github.com/manueljimenezs\">\r\n                        <FaGithub size={25} />\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/in/manuel-jim%C3%A9nez-s%C3%A1nchez-71b9a61a6/\">\r\n                        <FaLinkedin size={25}/>\r\n                    </a>  \r\n                </div>\r\n                <Burger />\r\n            </Nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nimport styled, { css } from 'styled-components';\r\n\r\n/*shadow: 0 24px 38px rgba(0, 107, 214, 0.25), 0 10px 10px rgba(0, 107, 214, 0.22),*/\r\n\r\nexport const ButtonStyle = styled.a`\r\n  font-family: Inter;\r\n  font-weight: 800;\r\n  font-size: 0.8rem;\r\n  border-radius: 5px;\r\n  margin-right: 1em;\r\n  padding: 8px 20px 8px 20px;\r\n  border: 0px;\r\n  color:white;\r\n  outline: none;\r\n  text-decoration: none;\r\n  &:active {\r\n    color: black;\r\n    background: white;\r\n  }\r\n  /*background-color: rgba(0, 107, 214, 1);\r\n  box-shadow: 0 24px 38px rgba(0, 107, 214, 0.25),  0 10px 10px rgba(0, 107, 214, 0.25);\r\n  */\r\n  ${props => props.primary && css`\r\n    background-color: rgba(0, 107, 214, 1);\r\n    box-shadow: 0 24px 38px rgba(0, 107, 214, 0.25),  0 10px 10px rgba(0, 107, 214, 0.25);\r\n  `}\r\n\r\n  ${props => props.danger && css`\r\n    background-color: rgba(205, 71, 70, 1);\r\n    box-shadow: 0 24px 38px rgba(205, 71, 70, 0.25),  0 10px 10px rgba(205, 71, 70, 0.25);\r\n  `}\r\n\r\n  ${props => props.success && css`\r\n    background-color: rgba(101, 169, 99, 1);\r\n    box-shadow: 0 24px 38px rgba(101, 169, 99, 0.25),  0 10px 10px rgba(101, 169, 99, 0.25);\r\n  `}\r\n  `;\r\n\r\n\r\n\r\nconst ButtonLink = ({label,href,...props}) => {\r\n    return (\r\n        <ButtonStyle {...props}\r\n          href={href}>\r\n          {label}\r\n        </ButtonStyle>\r\n    );\r\n}\r\n\r\nexport default ButtonLink;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const CardStyle = styled.div`\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n        :active{\r\n            /*color: tomato;*/\r\n        }\r\n    }\r\n\r\n    .card-title {\r\n        color:  rgb(0, 107, 214);\r\n        font-weight: bold;\r\n        padding-bottom: 1em;\r\n    }\r\n\r\n    height: 8em;\r\n    /*margin: 0.4em 0.7em;*/\r\n    border-radius: 6px;\r\n    border: 1px solid #e1e4e8;\r\n    font-size: 13px;\r\n    font-family: 'Helvetica', sans-serif, 'Roboto';\r\n    padding: 8px 8px;\r\n    background-color: #fff;\r\n    margin-bottom: 1em;\r\n    color: #000;\r\n    overflow: hidden;\r\n    -webkit-box-shadow: 0px 13px 10px -13px rgba(0,0,0,0.51);\r\n-moz-box-shadow: 0px 13px 10px -13px rgba(0,0,0,0.51);\r\nbox-shadow: 0px 13px 10px -13px rgba(0,0,0,0.51);\r\n\r\n@media (min-width: 792px) {\r\n    flex: 0 30%;\r\n    margin-bottom: 1.5%;\r\n}\r\n`\r\n\r\nconst Card = ({title,href,...props}) => {\r\n    return (\r\n        <CardStyle>\r\n            <a href={href}>\r\n                <div class=\"card-title\">{title}</div>\r\n            </a>\r\n            <div class=\"card-description\">\r\n                {props.children}\r\n            </div>\r\n            \r\n        </CardStyle>\r\n    );\r\n}\r\n\r\nexport default Card;","const projects = {\r\n    data: [\r\n        {\r\n            title: \"portfolio\",\r\n            url: \"https://github.com/manueljimenezs/portfolio\",\r\n            description: \"The source code of this web :) . Made in React using techniques like Hooks, styled-components, states and JSON.\"\r\n        },\r\n        {\r\n            title: \"Full-disk encryption on Archlinux with LVM+LUKS+BTRFS\",\r\n            url: \"https://github.com/manueljimenezs/portfolio\",\r\n            description: \"A secure Archlinux install using the BTRFS filesystem with encryption and zstd compression to save SSD space.\"\r\n        },\r\n        {\r\n            title: \"Building a router with a Raspberry Pi and OpenWRT\",\r\n            url: \"https://manueljimenezs.github.io/guides/2019/07/06/rpi-openwrt.html\",\r\n            description: \"An experiment with a Raspberry Pi to explore the capabilities of the OpenWRT, creating an access point in a subnetwork isolated from the main network\"\r\n        }\r\n    ]\r\n};\r\n\r\nexport default projects;","import React, {Component} from 'react';\r\nimport Navbar from '../components/Navigation/Navbar';\r\nimport { FaArrowDown} from 'react-icons/fa';\r\nimport './Home.css'\r\nimport logo from './me.svg'\r\nimport ButtonLink from '../components/UI/Button/ButtonLink';\r\nimport Card from '../components/UI/Card/Card';\r\nimport projects from './ProjectData';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"wrapper\">\r\n            <section id=\"home-intro\">\r\n                    <img src={logo} className=\"start-cover\" alt=\"\"/>\r\n                    <div className=\"home-titledesc\">\r\n                        <div className=\"subtitle\">Hello, I'm</div>\r\n                        <div className=\"title\">Manuel Jiménez</div>\r\n                        <div className=\"buttons\">\r\n                            <ButtonLink primary href=\"#home-cont\" label=\"PROJECTS\"/>\r\n                            <ButtonLink success href=\"#home-cont\" label=\"MORE INFO\"/>                            </div>\r\n                    </div>\r\n                    <span className=\"arrow\"><FaArrowDown /></span>  \r\n            </section>\r\n            <section id=\"home-cont\">\r\n                <h1>Projects</h1>\r\n            <div className=\"cardtainer\">\r\n                {projects.data.map((data) => (\r\n                <Card key={data.title} title={data.title} href={data.url}>\r\n                    {data.description}\r\n                </Card>))}\r\n            </div>\r\n            </section>\r\n            <footer>\r\n                Made by Manuel Jiménez with React and love ♥ \r\n            </footer>\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\r\nimport './App.css';\r\nimport Layout from './components/Layout';\r\nimport Home from './pages/Home';\r\n\r\nfunction App() {\r\n  document.title = \"Manuel Jiménez\";\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Home />\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}