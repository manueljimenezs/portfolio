{"version":3,"sources":["pages/me.svg","components/Layout.js","components/Navigation/Burger.js","components/Navigation/Navbar.js","components/UI/Button/ButtonLink.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","props","className","children","StyledBurger","styled","div","open","Ul","ul","Burger","useState","setOpen","onClick","href","Nav","nav","Navbar","Component","ButtonStyle","a","primary","css","danger","success","ButtonLink","label","Home","src","logo","alt","id","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,gC,oMCU5BC,G,kBARA,SAAAC,GACX,OACI,yBAAKC,UAAU,UACdD,EAAME,Y,kxDCFf,IAAMC,EAAeC,IAAOC,IAAV,KAsBM,qBAAGC,KAAkB,OAAS,UAInC,qBAAGA,KAAkB,gBAAkB,eAGvC,qBAAGA,KAAkB,mBAAqB,mBAC5C,qBAAGA,KAAkB,EAAI,KAGvB,qBAAGA,KAAkB,iBAAmB,eAKrDC,EAAKH,IAAOI,GAAV,KA4BS,qBAAGF,KAAkB,gBAAkB,sBA2DzCG,EAxBA,WAAO,IAAD,EACOC,oBAAS,GADhB,mBACVJ,EADU,KACJK,EADI,KAMjB,OACI,oCACI,kBAACR,EAAD,CAAcG,KAAMA,EAAMM,QAAS,kBAAMD,GAASL,KAC9C,8BACA,8BACA,+BAEJ,kBAACC,EAAD,CAAID,KAAMA,GACN,4BAAI,uBAAGM,QAAS,kBAAMD,GAASL,IAAOO,KAAK,cAAvC,UACJ,4BAAI,uBAAGA,KAAK,qCAAR,WACJ,4BAAI,uBAAGA,KAAK,qCAAR,SACJ,4BAAI,uBAAGA,KAAK,qCAAR,aACJ,4BAAI,uBAAGA,KAAK,qCAAR,e,moBCrHpB,IAAMC,EAAMV,IAAOW,IAAV,KA+CMC,E,uKAbP,OAEI,kBAACF,EAAD,KACI,yBAAKb,UAAU,QAAf,aAGA,yBAAKA,UAAU,cACf,kBAAC,EAAD,W,GAVKgB,a,yqCC9Bd,IAAMC,EAAcd,IAAOe,EAAV,KAkBpB,SAAAnB,GAAK,OAAIA,EAAMoB,SAAWC,YAAjB,QAKT,SAAArB,GAAK,OAAIA,EAAMsB,QAAUD,YAAhB,QAKT,SAAArB,GAAK,OAAIA,EAAMuB,SAAWF,YAAjB,QAiBEG,EATI,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAMZ,EAAmB,EAAnBA,KAAQb,EAAW,gCAC1C,OACI,kBAACkB,EAAD,iBAAiBlB,EAAjB,CACEa,KAAMA,IACLY,ICiBIC,E,uKArDP,OACI,oCACI,kBAAC,EAAD,MACA,yBAAKzB,UAAU,WACf,6BAASA,UAAU,cACX,yBAAK0B,IAAKC,IAAM3B,UAAU,cAAc4B,IAAI,KAC5C,yBAAK5B,UAAU,kBACX,yBAAKA,UAAU,YAAf,cACA,yBAAKA,UAAU,SAAf,qBACA,yBAAKA,UAAU,QAAf,2CACA,yBAAKA,UAAU,WACX,kBAAC,EAAD,CAAYmB,SAAO,EAACP,KAAK,aAAaY,MAAM,aAC5C,kBAAC,EAAD,CAAYF,SAAO,EAACV,KAAK,aAAaY,MAAM,cAFhD,iCAIJ,0BAAMxB,UAAU,SAAQ,kBAAC,IAAD,QAEhC,6BAAS6B,GAAG,aACR,6CAGA,6CAGA,6CAGA,6CAGA,6CAGA,6CAGA,6CAGA,6CAGA,oD,GA3CDb,aCOJc,MAVf,WACE,OACE,yBAAK9B,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,SCGY+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1db13697.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.78e4a9c2.svg\";","import React from 'react';\nimport './Layout.css';\nconst Layout = props => {\n    return (\n        <div className=\"layout\">\n        {props.children}\n        </div>\n    )\n};\n\nexport default Layout;","import React,{ useState } from 'react';\nimport styled from 'styled-components';\n\nconst StyledBurger = styled.div`\n\n  \n  width: 25px;\n  height: 26px;\n  display: block;\n  \n  \n  position: fixed;\n  top: 15px;\n  right: 30px;\n  \n  z-index: 20;\n  display: none;\n  @media (max-width: 768px) {\n    display: flex;\n    justify-content: space-around;\n    line-height: 2rem;\n    flex-flow: column nowrap;\n  }\n  div {\n    height: 4px;\n    background-color: ${({ open }) => open ? '#fff' : '#333'};\n    transform-origin: 0.3px;\n    transition: all 0.2s linear;\n    &:nth-child(1) {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n    &:nth-child(2) {\n      transform: ${({ open }) => open ? 'translateX(100%)' : 'translateX(0)'};\n      opacity: ${({ open }) => open ? 0 : 1};\n    }\n    &:nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n\nconst Ul = styled.ul`\n\n  list-style: none;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: flex-end;\n  margin: 0;\n  \n  li {\n    padding: 0 0 0 20px;\n    a {\n      text-decoration: none;\n      color: #000;\n      text-transform: uppercase;\n      font-size: 0.8rem;\n      font-weight: bold;\n      font-family: 'Inter';\n    }\n  }\n\n;\n  /*For mobile*/\n  @media (max-width: 768px) {\n    justify-content: flex-start;\n    padding-top: 80px;\n    flex-flow: column nowrap;\n    background-color: tomato;\n    position: fixed;\n    transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(100%)'};\n    top: 0;\n    right: 0;\n    height: 100vh;\n    width: 100vw;\n    \n    /*transition: transform 0.1s ease-in-out;*/\n/*\n    li:hover {\n      background-color: #fff;\n      color: #000;\n\n      a {\n        color: tomato;\n      }\n    }*/\n\n    li {\n      \n      padding: 8px 30px;\n      text-align: right;\n\n      a {\n        color: tomato;\n        font-size: 1.2rem;\n        color: white;\n        font-weight: 800;\n      }\n    }\n\n  \n\n  }\n`;\n\nconst Burger = () => {\n    const [open, setOpen] = useState(false)\n\n      /* Preventing page scrolling when open*/\n      /*open ? document.body.style.overflow = 'hidden' :  document.body.style.overflow = 'unset';*/\n\n    return (\n        <>\n            <StyledBurger open={open} onClick={() => setOpen(!open)}>\n                <div />\n                <div />\n                <div />\n            </StyledBurger>\n            <Ul open={open}>\n                <li><a onClick={() => setOpen(!open)} href=\"#home-cont\">About</a></li>\n                <li><a href=\"https://github.com/manueljimenezs\">Github</a></li>           \n                <li><a href=\"https://manueljimenezs.github.io/\">Blog</a></li>                             \n                <li><a href=\"https://manueljimenezs.github.io/\">LinkedIn</a></li>                             \n                <li><a href=\"https://manueljimenezs.github.io/\">Contact</a></li>                             \n            </Ul>\n        </>\n    );\n}\n\nexport default Burger;","import React, {Component} from 'react';\n/*import './Navbar.css'*/\nimport styled from 'styled-components';\nimport Burger from './Burger';\n\nconst Nav = styled.nav`\n  /*width: 100%;*/\n  height: 3.5rem;\n  display: flex;\n  padding: 0 1rem;\n  position: fixed;\n  left: 0;\n  right: 0;\n  background: rgba(255,255,255,1);\n\n  @supports ((-webkit-backdrop-filter: blur(20px)) or (backdrop-filter: blur(20px))) {\n     background-color: rgba(255,255,255,0.5);\n     -webkit-backdrop-filter: blur(20px);\n     backdrop-filter: blur(20px);\n  }\n  \n  .separator {\n      margin: 0 auto;\n  }\n\n  justify-content: center;\n  align-items: center;\n\n  .logo {\n    /*padding: 25px 30px;*/\n    font-weight:800;\n    font-size: 1.4em;\n  }\n`\n\n\nclass Navbar extends Component {\n//const Header = () => {\n    render() {\n        return (\n\n            <Nav>\n                <div className=\"logo\">\n                    manujs.me\n                </div>\n                <div className=\"separator\"></div>\n                <Burger />\n            </Nav>\n        )\n    }\n}\n\nexport default Navbar;","import React from 'react';\n\nimport styled, { css } from 'styled-components';\n\n/*shadow: 0 24px 38px rgba(0, 107, 214, 0.25), 0 10px 10px rgba(0, 107, 214, 0.22),*/\n\nexport const ButtonStyle = styled.a`\n  font-family: Inter;\n  font-weight: 800;\n  font-size: 0.8rem;\n  border-radius: 5px;\n  margin-right: 1em;\n  padding: 8px 20px 8px 20px;\n  border: 0px;\n  color:white;\n  outline: none;\n  text-decoration: none;\n  &:active {\n    color: black;\n    background: white;\n  }\n  /*background-color: rgba(0, 107, 214, 1);\n  box-shadow: 0 24px 38px rgba(0, 107, 214, 0.25),  0 10px 10px rgba(0, 107, 214, 0.25);\n  */\n  ${props => props.primary && css`\n    background-color: rgba(0, 107, 214, 1);\n    box-shadow: 0 24px 38px rgba(0, 107, 214, 0.25),  0 10px 10px rgba(0, 107, 214, 0.25);\n  `}\n\n  ${props => props.danger && css`\n    background-color: rgba(205, 71, 70, 1);\n    box-shadow: 0 24px 38px rgba(205, 71, 70, 0.25),  0 10px 10px rgba(205, 71, 70, 0.25);\n  `}\n\n  ${props => props.success && css`\n    background-color: rgba(101, 169, 99, 1);\n    box-shadow: 0 24px 38px rgba(101, 169, 99, 0.25),  0 10px 10px rgba(101, 169, 99, 0.25);\n  `}\n  `;\n\n\n\nconst ButtonLink = ({label,href,...props}) => {\n    return (\n        <ButtonStyle {...props}\n          href={href}>\n          {label}\n        </ButtonStyle>\n    );\n}\n\nexport default ButtonLink;","import React, {Component} from 'react';\nimport Navbar from '../components/Navigation/Navbar';\nimport { FaArrowDown } from 'react-icons/fa';\nimport './Home.css'\nimport logo from './me.svg'\n//import Button from '../components/UI/Button/Button';\nimport ButtonLink from '../components/UI/Button/ButtonLink';\n\nclass Home extends Component {\n    render() {\n        return (\n            <>\n                <Navbar />\n                <div className=\"wrapper\">\n                <section className=\"home-intro\">\n                        <img src={logo} className=\"start-cover\" alt=\"\"/>\n                        <div className=\"home-titledesc\">\n                            <div className=\"subtitle\">Hello, I'm</div>\n                            <div className=\"title\">Manuel Jim√©nez</div>\n                            <div className=\"text\">Computer Scientist @ Alcobendas, Madrid</div>\n                            <div className=\"buttons\">\n                                <ButtonLink primary href=\"#home-cont\" label=\"PROJECTS\"/>\n                                <ButtonLink success href=\"#home-cont\" label=\"MORE INFO\"/>                            </div>\n                        </div>\n                        <span className=\"arrow\"><FaArrowDown /></span>  \n                </section>\n                <section id=\"home-cont\">\n                    <p>\n                   This is a test\n                   </p>\n                    <p>\n                   This is a test\n                   </p>\n                    <p>\n                   This is a test\n                   </p>\n                    <p>\n                   This is a test\n                   </p>\n                    <p>\n                   This is a test\n                   </p>\n                    <p>\n                   This is a test\n                   </p>\n                    <p>\n                   This is a test\n                   </p>\n                    <p>\n                   This is a test\n                   </p>\n                    <p>\n                   This is a test\n                   </p>\n                  \n                </section>\n                </div>\n        </>\n        )\n    }\n}\n\n\nexport default Home;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Home />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}